/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode GetIntersectionNode(ListNode headA, ListNode headB) {
        HashSet<ListNode> set1 = new HashSet<ListNode>();
        HashSet<ListNode> set2 = new HashSet<ListNode>();
        
        ListNode tempA = headA;
        while(tempA != null)
        {
            set1.Add(tempA);
            tempA = tempA.next;
        }
        
        ListNode tempB = headB;
        while(tempB != null)
        {
            set2.Add(tempB);
            tempB = tempB.next;
        }
        
        foreach(ListNode i in set1)
        {
            if(set2.Contains(i))
            {
                return i;
            }
        }
        
        return null;
    }
}
