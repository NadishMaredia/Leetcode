/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<int> LargestValues(TreeNode root) {
        
        IList<int> result = new List<int>();
        
        if(root == null) return result;
        
        Queue<TreeNode> queue = new Queue<TreeNode>();
        queue.Enqueue(root);
        while(queue.Count != 0)
        {
            int currSize = queue.Count;
            int max = Int32.MinValue;
            for(int i = 0;i<currSize;i++)
            {
                TreeNode curr = queue.Dequeue();
                max = Math.Max(max, curr.val);
                if(curr.left != null) queue.Enqueue(curr.left);
                if(curr.right != null) queue.Enqueue(curr.right);
            }
            result.Add(max);
        }
        return result;
        
    }
}
